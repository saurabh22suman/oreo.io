version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: oreo_postgres
    environment:
      POSTGRES_DB: oreo_db
      POSTGRES_USER: oreo_user
      POSTGRES_PASSWORD: oreo_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - oreo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oreo_user -d oreo_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: oreo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - oreo_network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: oreo_backend
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=oreo_user
      - DB_PASSWORD=oreo_password
      - DB_NAME=oreo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=development
      - GIN_MODE=debug
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - oreo_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: air -c .air.toml

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: oreo_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
      - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - oreo_network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Nginx (Development Proxy)
  nginx:
    image: nginx:alpine
    container_name: oreo_nginx
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - oreo_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  oreo_network:
    driver: bridge
