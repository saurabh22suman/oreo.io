services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: oreo-postgres-dev
    environment:
      POSTGRES_DB: oreo_dev_db
      POSTGRES_USER: oreo_dev_user
      POSTGRES_PASSWORD: oreo_dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - oreo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oreo_dev_user -d oreo_dev_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: oreo-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - oreo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: oreo-backend-dev
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - USE_MOCK_DB=false
      - USE_MOCK_REDIS=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=oreo_dev_user
      - DB_PASSWORD=oreo_dev_password
      - DB_NAME=oreo_dev_db
      - DB_SSL_MODE=disable
      - DATABASE_URL=postgres://oreo_dev_user:oreo_dev_password@postgres:5432/oreo_dev_db?sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=development-jwt-secret-key-change-in-production
      - JWT_ACCESS_EXPIRY=1h
      - JWT_REFRESH_EXPIRY=720h
      - FRONTEND_URL=http://localhost:3000
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=1m
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - oreo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: oreo-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_ENVIRONMENT=development
    ports:
      - "3000:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - oreo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  oreo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
